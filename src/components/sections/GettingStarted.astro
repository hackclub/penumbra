---
import DocumentSection from "../DocumentSection.astro";
import ShaderEditor from "../ShaderEditor.svelte";
import Jargon from "../Jargon.svelte";
import BrowserDependent from "../BrowserDependent.svelte";

import imgStep1 from "../../assets/img/step-1.svg";
import imgStep2 from "../../assets/img/step-2.svg";
import imgStep3 from "../../assets/img/step-3.svg";
import imgStep4 from "../../assets/img/step-4.svg";

import imgSlackDots from "../../assets/img/dots-slack.svg";
import imgHourglassDots from "../../assets/img/dots-hourglass.svg";
import imgChromeDots from "../../assets/img/dots-chrome.svg";
import imgFirefoxDots from "../../assets/img/dots-firefox.svg";
import imgHeartDots from "../../assets/img/dots-heart.svg";

import dedent from "dedent";
import { Image } from "astro:assets";
---

<DocumentSection id="getting-started">
  <h1>getting started.</h1>
  <p>
    Penumbra is a Hack Club YSWS (You Ship, We Ship) program, where you ship art made with shaders, and we ship you
    posters of that art, free of charge! We're also giving away RTX and RX GPUs for the most dedicated.
  </p>

  <div class="steps bg-scroll-anchor">
    <div>
      <div class="img">
        <Image src={imgStep1} alt="Orpheus waving" aria-hidden />
      </div>
      <div class="caption"><span>Join the Slack and setup Hackatime</span></div>
    </div>

    <div>
      <div class="img">
        <Image src={imgStep2} alt="Orpheus coding" aria-hidden />
      </div>
      <div class="caption"><span>Create shaders with ShaderToy</span></div>
    </div>

    <div>
      <div class="img">
        <Image src={imgStep3} alt="Orpheus holding a poster" aria-hidden />
      </div>
      <div class="caption"><span>Submit them and get posters</span></div>
    </div>

    <div>
      <div class="img">
        <Image src={imgStep4} alt="A graphics card" aria-hidden />
      </div>
      <div class="caption"><span>45 hrs of work = GPU!</span></div>
    </div>
  </div>

  <p class="no-anim">
    We will use a local poster printing service in your country in order to ship your poster.
    In order to get a GPU, you'll need to spend at least <em>45 hours</em> across <em>multiple shaders</em>.
    We'll let you know how close you are to that goal on <em>Slack</em>!
  </p>

  <p>
    To get started, join our Slack and set up Hackatime! We use Slack as our primary communication
    platform. Hackatime is our custom WakaTime server to track your coding time. You can use it with
    the WakaTime for ShaderToy browser extension!
  </p>

  <div class="steps smaller hoverable">
    <a href="https://slack-gateway.hackclub.com/invite?ysws=penumbra" target="_blank">
      <div class="img">
        <Image src={imgSlackDots} alt="Slack icon" aria-hidden />
      </div>
      <div class="caption"><span>Join the Slack</span></div>
    </a>

    <a href="https://hackatime.hackclub.com" target="_blank">
      <div class="img">
        <Image src={imgHourglassDots} alt="Hourglass icon" aria-hidden />
      </div>
      <div class="caption"><span>Set-up WakaTime with Hackatime</span></div>
    </a>

    <a class="only-chrome" href="https://chromewebstore.google.com/detail/wakatime-for-shadertoy/akgicdopjilmbjmdmdjdfikoocibfdpn" target="_blank">
      <div class="img">
        <Image src={imgChromeDots} alt="Chrome icon" aria-hidden />
      </div>
      <div class="caption"><span>Install the Chrome extension</span></div>
    </a>

    <a class="only-firefox" href="https://addons.mozilla.org/en-US/firefox/addon/wakatime-for-shadertoy" target="_blank">
      <div class="img">
        <Image src={imgFirefoxDots} alt="Firefox icon" aria-hidden />
      </div>
      <div class="caption"><span>Install the Firefox extension</span></div>
    </a>

    <a href="https://shadertoy.com/new" target="_blank">
      <div class="img">
        <Image src={imgHeartDots} alt="A heart" aria-hidden />
      </div>
      <div class="caption"><span>Have fun on ShaderToy!</span></div>
    </a>
  </div>

  <p class="bg-scroll-anchor">
    But first - let's explain what actually *is* a shader.
    For each pixel coordinate, a “fragment” shader will return its color!
  </p>

  <ShaderEditor client:load initialCode={dedent`
    // Input: coordinate, output: RGB color
    vec3 fn(vec2 coord) {
        // As we go further to the right, increase the red value. 
        return vec3(coord.x, 0, 0);
    }
  `}/>

  <p>
    This language is called GLSL - the OpenGL Shading Language. Try messing around with the sandbox above!
    
    <br><br>

    You're given UV coordinates: they range from 0.0 to 1.0. (0.0, 0.0) is the bottom-right corner,
    and (1.0, 1.0) is the top-left one. The center of the screen is at (0.5, 0.5).
  </p>

  <ShaderEditor client:load initialCode={dedent`
    vec3 fn(vec2 coord) {
        // Distance from the center - (0.5, 0.5). Try changing that vector!
        float d = distance(vec2(0.5, 0.5), coord);
        return vec3(d);
    }
  `}/>

  <p>
    There are multiple approaches to making art with shaders! Because what you're writing is just
    a function, try using random math formulas, and see what happens!
  </p>

  <ShaderEditor client:load initialCode={dedent`
    vec3 fn(vec2 coord) {
        // Random fun with trig functions! Mess around with it!
        float x = coord.x, y = coord.y;
        float v = 15.0 * sin((x * x - y * y) * 10.0);
        return vec3(
            0.5 + 0.5 * sin(v),
            0.0,
            0.5 + 0.5 * sin(v + 4.0)
        );
    }
  `}/>

  <p class="bg-scroll-anchor">
    If you want to do 3D, you are probably searching for <em>raymarching</em>. You can learn more about it
    with the guides in the next section!
  </p>
</DocumentSection>

<style lang="scss">
  .shadertoy-embed {
    width: 100%;
  }

  .steps {
    &.smaller {
      .img > img {
        width: 6em;
        height: 6em;
      }
    }

    &.hoverable {
      > * {
        transition: transform .25s;
        transform: scale(1.00);
      }

      > *:hover {
        transform: scale(1.03);
      }

      > *:active {
        transform: scale(0.98);
      }
    }

    display: flex;
    width: 100%;
    justify-content: space-around;
    margin: 3em 0;

    @media screen and (max-width: 730px) {
      flex-direction: column;
      margin: 1em 0;
      align-items: center;
      gap: 2em;

      div img {
        width: 7em;
        height: min-content;
      }
    }

    > a {
      color: #fff;
      display: block;
      text-decoration: none;
    }

    .img {
      width: 100%;
      height: 100%;
      display: flex;
      align-items: center;
      filter: drop-shadow(0 0 4px #fff);

      > img {
        width: 8em;
        height: 8em;
        aspect-ratio: 1 / 1;
      }
    }

    div, > a {
      display: flex;
      flex-direction: column;
      gap: 1em;
      width: 25%;

      @media screen and (max-width: 730px) {
        width: 100%;
        align-items: center;
      }

      .caption {
        width: 100%;
        display: flex;
        align-items: center;

        span {
          width: 75%;
          text-align: center;
          filter: drop-shadow(0 0 4px #fff);
        }
      }
    }
  }
</style>

<script>
  // running browser detction only on client side to avoid hydration
  if (typeof window !== 'undefined') {
    if (navigator.userAgent.includes("Chrome/")) {
      document.querySelectorAll(".only-firefox").forEach(x => x.remove());
    }
    else {
      document.querySelectorAll(".only-chrome").forEach(x => x.remove());
    }
  }
</script>